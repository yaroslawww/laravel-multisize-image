<?php

namespace Gcsc\LaravelMultisizeImage\Tests\AvatarManager;


use Gcsc\LaravelMultisizeImage\ImageManagers\AvatarManager;
use Gcsc\LaravelMultisizeImage\SavedImageData;
use Illuminate\Contracts\Filesystem\Filesystem;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Storage;
use Intervention\Image\Facades\Image;
use Mockery;
use PHPUnit\Framework\TestCase;

class ReplaceOrSaveTest extends TestCase
{

    protected $base64encodedImage = 'image/jpeg;base64,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';

    /** @test */
    public function image_saved()
    {

        $image = $this->getMockBuilder(\Intervention\Image\Image::class)->getMock();
        $storage = $this->getMockBuilder(Filesystem::class)->getMock();


        $mockImage = Mockery::mock('alias:' . Image::class);
        $mockImage->shouldReceive('make')
            ->andReturn($image);
        $mockStorage = Mockery::mock('alias:' . Storage::class);
        $mockStorage->shouldReceive('disk')
            ->andReturn($storage);

        $storage->expects($this->any())
            ->method('put');

        $user = $this->getMockBuilder(Model::class)->getMock();
        $user->avatar = null;
        /** @var SavedImageData $result */
        $result = (new AvatarManager($user))->replaceOrSave($this->base64encodedImage);

        $this->assertInstanceOf(SavedImageData::class, $result);
        $this->assertStringContainsString('.jpg', $result->getName());
    }
}